/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  SignatureAllowanceStorage,
  SignatureAllowanceStorageInterface,
} from "../../../src/SignatureAllowance/SignatureAllowanceStorage";

const _abi = [
  {
    inputs: [],
    name: "defaultToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "expiryPeriod",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "saltUsed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "tokensAllowed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class SignatureAllowanceStorage__factory {
  static readonly abi = _abi;
  static createInterface(): SignatureAllowanceStorageInterface {
    return new utils.Interface(_abi) as SignatureAllowanceStorageInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SignatureAllowanceStorage {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as SignatureAllowanceStorage;
  }
}
