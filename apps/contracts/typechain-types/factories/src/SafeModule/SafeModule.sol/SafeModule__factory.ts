/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  SafeModule,
  SafeModuleInterface,
} from "../../../../src/SafeModule/SafeModule.sol/SafeModule";

const _abi = [
  {
    inputs: [],
    name: "ModuleExecutionFailed",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "SafeModuleInitialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "contract Safe",
        name: "prevSafe",
        type: "address",
      },
      {
        indexed: false,
        internalType: "contract Safe",
        name: "newSafe",
        type: "address",
      },
    ],
    name: "TargetSafeUpdated",
    type: "event",
  },
] as const;

export class SafeModule__factory {
  static readonly abi = _abi;
  static createInterface(): SafeModuleInterface {
    return new utils.Interface(_abi) as SafeModuleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SafeModule {
    return new Contract(address, _abi, signerOrProvider) as SafeModule;
  }
}
